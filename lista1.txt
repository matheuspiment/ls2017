MATHEUS RIBEIRO PIMENTA NUNES

Git (exercícios)
1.	Qual o comando para obter a versão instalada do Git?
git version

2.	Qual o efeito da execução de cada um dos comandos abaixo?
a.	git config –l
Lista todas as configurações do usuário.

b.	git mv a.txt b.txt
Renomear arquivo.

c.	git reset –hard
Commit sha1.	

d.	git log -27
Exibe os últimos 27 commits.

e.	git help
Exibe e descreve os comandos do Git.

f.	git help reset
Abre o arquivo de ajuda sobre o comando reset.

g.	git add –all
Adiciona todos os novos arquivos staging área.

h.	git add -u 
Adiciona os arquivos modificados que já são “monitorados” pelo Git.

3.	O fluxo “clássico” de interação com o Git é algo como “realizar trabalho em um ou mais arquivos e diretórios”, “acrescentá-los para serem contemplados” e, finalmente, executar um “commit”. Quais os comandos necessários para realizar os dois últimos “passos” desse fluxo?
“acrescentá-los para serem contemplados” :
git add... 
git rm... 
git mv... 
executar um “commit” :
git commit...

4.	Qual o comando deve ser executado para identificar o que foi alterado desde o último “commit”?
git show

5.	Em um dado repositório, arquivos simplesmente copiados para lá, ou seja, untracked, podem ser exibidos/identificados com que comando?
git status

6.	Qual o comando para efetuar um commit?
git commit –m “<comentário>”

7.	Qual o comando que devemos empregar para descartar mudanças ocorridas no arquivo teste.txt, por exemplo?
git checkout -- <file>

8.	O que deve ser feito para que um determinado diretório do seu repositório seja ignorado pelo Git?
Crie um arquivo .gitignore e adicione a seguinte linha nele:
[^.]*

9.	O que acontece se o seu repositório local for removido?
Ocorre a perda do repositório.

10.	Como clonar um repositório remoto?
git clone <URL do diretório>

11.	Em alguns cenários git log pode produzir extensos resultados. Se houver interesse em visualizar o histórico de um repositório, onde cada mudança é fornecida exatamente em uma única linha, qual o comando que deve ser empregado?
git log --pretty=oneline

12.	Em qual arquivo o Git armazena informações de configuração empregadas por usuário?
~/.gitconfig

13.	Qual o comando para criar um repositório local?
Você precisa ir para o diretório do projeto e digitar:
git init

14.	Qual o nome do diretório criado pelo Git quando se executa o comando git init?
O nome será o mesmo do diretório onde o comando foi execultado.

15.	Qual o comando para adicionar todos os arquivos modificados? (Aqueles para os quais git status identificam como modified?)
git add --all

16.	O Git faz uso do valor de hash conhecido por SHA1. O que isto significa? Qual o propósito? O que é SHA1?
Isso significa que é impossível mudar o conteúdo de qualquer arquivo ou diretório sem que o Git tenha conhecimento. Essa funcionalidade é parte fundamental do Git e é integral à sua filosofia. Você não pode perder informação em trânsito ou ter arquivos corrompidos sem que o Git seja capaz de detectar. O hash SHA-1, uma string de 40 caracteres composta de caracteres hexadecimais (0-9 e a-f) que é calculado a partir do conteúdo de um arquivo ou estrutura de um diretório no Git.

17.	Qual a palavra para indicar o último commit em vez do valor de hash SHA1 correspondente?

18.	Quando se cria dois arquivos usando um editor de texto qualquer e, na sequência, executamos o comando git add -u, os dois arquivos criados passam de untracked para new file?
Não.

19.	Qual o efeito da execução dos dois comandos abaixo, nesta ordem, em um dado repositório?
git reset --soft HEAD~1
git reset –hard
git reset --soft HEAD~1: Volta ao último commit e mantém os últimos arquivos no Stage.
git reset –hard: Exibe SHA1 do último commit.

20.	Após o emprego de um ambiente integrado de desenvolvimento (IDE), é comum a criação de arquivos e diretórios. Qual o comando que podemos empregar para remover arquivos e diretórios untracked?
git clean -f

21.	Qual o nome do arquivo no qual podemos inserir a indicação para o Git de arquivos e diretórios a serem ignorados?
.gitignore

22.	Quando se cria o arquivo MinhaClasse.class em um dado diretório e desejamos que o Git ignore não apenas este, mas arquivos .class em geral, por todos os membros de uma equipe que estão contribuindo com um dado projeto?
Adicionar no .gitignore: *.class 

23.	jQuery é uma famose biblioteca em JavaScript. Consulte detalhes em http://jquery.com. O repositório Git correspondente encontra-se disponível em https://github.com/jquery/jquery.git. Faça o clone deste repositório jqueryrepo.
24.	No repositório jqueryrepo, criado no passo anterior, qual o efeito do comando 
git shortlog -sne?
Exibe o nome e o e-mail dos colaboradores.

25.	No repositório jqueryrepo, qual o efeito de git remote -v?
Exibe a URL remoto do diretório.

26.	Um repositório Git pode ser etiquetado ao longo do tempo. Ou seja, commits específicos podem ser “marcados” ou “etiquetados” para facilitar referências posteriores. Para listar todas as “etiquetas” (tags) estabelecidas para um dado repositório, qual comando deve ser executado?
git tag

27.	Caso um dato repositório retorne muitas “marcas” ou “etiquetas” para o comando git tag, como retornar apenas aquelas que atendem a determinado padrão, por exemplo, iniciadas por 2.0?
git tag -a <nome>

28.	Qual o efeito do comando git tag -a 3.4-gold -m “minha versão ouro”?
Cria uma tag com a mensagem “minha versão ouro” armazenada.

29.	Após executado o comando acima, qual o efeito de git show 3.4-gold?
Exibe os dados da tag junto com o commit que foi taggeado.

30.	O que o comando git push origin 3.4-gold teria como efeito?
Envia a tag para o servidor compartilhado após tê-la criado.

31.	Após executar um commit, qual o efeito de git commit --amend?
Combina o novo commit com o anterior.

32.	Após executar git add x.txt, qual o efeito de git reset HEAD x.txt?
Remove o arquivo da Staging área.

33.	Após alterar o conteúdo de um arquivo committed em passo anterior, qual o efeito do comando git checkout -- a.txt?
Descarta as mudanças ocorrida no arquivo.

34.	Qual a diferença entre os comandos git reset HEAD x.txt e git checkout -- a.txt?
git reset HEAD: Remove o arquivo da Staging área.
git checkout --: Descarta as modificações ocorridas no arquivo.
